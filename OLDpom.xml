<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.github.ccezarst</groupId>
  <artifactId>componentEngine</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>componentEngine</name>
  <description>A component engine which allows devs to build modular systems with indpendent components. Supports multithreading by default.</description>
  <url>http://maven.apache.org</url>

  <licenses>
    <license>
      <name>CC BY-NC-SA 4.0</name>
      <url>https://creativecommons.org/licenses/by-nc-sa/4.0/</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Constantin Cezar Stefan</name>
    </developer>
  </developers>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <!-- point the GPG plugin at your gpg executable if needed -->
    <gpg.executable>gpg</gpg.executable>
  </properties>

  <distributionManagement>
	  <snapshotRepository>
	    <id>ossrh</id>
	    <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
	  </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>

  <build>
    <plugins>

      <!-- 1) Main JAR into target/build -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.2.2</version>
        <configuration>
          <outputDirectory>${project.build.directory}/build</outputDirectory>
        </configuration>
      </plugin>

      <!-- 2) Copy & rename the artifact POM into target/build -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>copy-artifact-pom</id>
            <phase>package</phase>
            <goals><goal>run</goal></goals>
            <configuration>
              <target>
                <copy file="${basedir}/pom.xml"
                      tofile="${project.build.directory}/build/${project.artifactId}-${project.version}.pom"
                      overwrite="true"/>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- 3) Attach sources JAR -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals><goal>jar-no-fork</goal></goals>
          </execution>
        </executions>
      </plugin>

      <!-- 4) Attach Javadoc JAR -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.11.2</version>
        <executions>
          <execution>
            <id>attach-javadoc</id>
            <goals><goal>jar</goal></goals>
          </execution>
        </executions>
      </plugin>

      <!-- 5) GPG-sign all artifacts in the verify phase -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>3.2.4</version>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>verify</phase>
            <goals><goal>sign</goal></goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>


</project>
